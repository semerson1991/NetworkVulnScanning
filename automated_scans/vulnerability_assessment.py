from automated_scans.nmap.nmap_scanner import NmapScanner
from automated_scans.openvas.openvas_scanner import OpenvasScanner
from time import sleep

class VulnerabilityAssessment():

    def __init__(self):
        self.nmap_result = None
        self.openvas_results = None

    def run_all(self):
        nmap_results = self.run_nmap_scan(self)
        hosts = []
        for host in nmap_results.hosts:
            hosts.append(host)
        if len(hosts) > 0:
            openvas_scanner = OpenvasScanner
            openvas_scanner.run_openvas_Scan(self, hosts)
            while openvas_scanner.check_progress(openvas_scanner, 'afbfd91c-37e2-4aca-bfd4-7ece0ef5365a') != 'Done':
                sleep(5)
        self.nmap_result = nmap_results


    def run_nmap_scan(self):
        nmap = NmapScanner
        nmap_results = nmap.run_nmap_scan(nmap, "10.10.10.0/24", "-sS -A -v")
        self.nmap_result = nmap_results


    def run_openvas_Scan(self, hosts):
        openvas = OpenvasScanner
        openvas.run_openvas_scan(hosts)


    def get_nmap_result(self):
        return self.nmap_result

    def get_openvas_result(self):
        return self.openvas_results